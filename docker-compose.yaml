services:
  # Kubero usually runs in a Kubernetes cluster in the kubero namespace
  # In case you want to run it from a separate container, you can use the following configuration
  # Make sure yourt cluster is accessible with the kubeconfig file or the KUBECONFIG_BASE64 environment variable
  # To extract your kubeconfig file from a Kubernetes cluster, you can use the following command:
  # kubectl config view --raw --minify | base64
  kubero:
    container_name: "kubero-ui"
    build:
      context: .
      args:
        - VERSION=Local-Build
      dockerfile: Dockerfile
    image: ghcr.io/kubero-dev/kubero/kubero:latest
    #command: ["tail", "-f", "/dev/null"]
    env_file:
      # copy the .env.template file to .env and change the values to your needs
      - server/.env
    environment:
      - KUBECONFIG_BASE64=CHANGE_ME
      #- KUBECONFIG_PATH=/app/server/kubeconfig
      - KUBERO_CONTEXT=
      - KUBERO_NAMESPACE=kubero
      - KUBERO_SESSION_KEY=randomString
    ports:
      # the UI will be available on http://localhost:8000. Make sure the port is not used by another service
      - "8000:2000"
    volumes:
      # copy the config.yaml.template file to config.yaml 
      - ./server/config.yaml:/app/server/config.yaml
      - ./server/db:/app/server/db
      #- ./kubeconfig:/app/server/kubeconfig